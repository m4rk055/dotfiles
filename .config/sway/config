# Set mod key (Mod1=<Alt>, Mod4=<Super>)
set $mod Mod4

#####################################
# variables
#####################################

  set $terminal alacritty

#####################################

#####################################
# inputs
#####################################

  input "type:keyboard" {
    xkb_layout "us,rs,rs"
    xkb_variant ",latin,"
    xkb_options grp:alt_shift_toggle
  }

  input "2:7:SynPS/2_Synaptics_TouchPad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
  }

#####################################

#####################################
# basics
#####################################

  # focus_follows_mouse no

  # Use Mouse+$mod to drag floating windows
  floating_modifier $mod

  # start a terminal
  bindsym $mod+Return exec $terminal

  # kill focused window
  bindsym $mod+Shift+q kill

  # start launcher
  bindsym $mod+d exec rofi -theme solarized -font "hack 10" -show run
  bindsym $mod+Shift+d exec yofi --config-file ~/.config/yofi/config

  # launch categorized menu
  bindsym $mod+z exec --no-startup-id morc_menu


  # Font for window titles. Will also be used by the bar unless a different font
  # is used in the bar {} block below.
  font xft:URWGothic-Book 11

  # Configure border style <normal|1pixel|pixel xx|none|pixel>
  default_border pixel 1
  default_floating_border normal
  hide_edge_borders both

  # reload the configuration file
  bindsym $mod+Shift+c reload

  # Exit sway (logs you out of your Wayland session)
  bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

#####################################

set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock
exec "rm -f $WOBSOCK && mkfifo $WOBSOCK && tail -f $WOBSOCK | wob"

#####################################
## sound
#####################################

  exec --no-startup-id "pactl set-default-sink alsa_output.pci-0000_07_00.6.HiFi__hw_Generic_1__sink"

  bindsym XF86AudioRaiseVolume exec "pactl -- set-sink-volume @DEFAULT_SINK@ +5% && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}' > $WOBSOCK"
  bindsym XF86AudioLowerVolume exec "pactl -- set-sink-volume @DEFAULT_SINK@ -5% && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}' > $WOBSOCK"
  bindsym XF86AudioMute exec "pactl set-sink-mute @DEFAULT_SINK@ toggle && pactl get-sink-volume @DEFAULT_SINK@"

#####################################

#####################################
# Screen brightness
#####################################
  bindsym XF86MonBrightnessUp exec "brightnessctl set 5%+ | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK"
  bindsym XF86MonBrightnessDown exec "brightnessctl set 5%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK"
#####################################

#####################################
# windows
#####################################

  # set default desktop layout (default is tiling) <stacking|tabbed>
  workspace_layout tabbed

  # change focus
  bindsym $mod+h focus left
  bindsym $mod+j focus down
  bindsym $mod+k focus up
  bindsym $mod+l focus right

  bindsym $mod+Left focus left
  bindsym $mod+Down focus down
  bindsym $mod+Up focus up
  bindsym $mod+Right focus right

  # move focused window
  bindsym $mod+Shift+h move left
  bindsym $mod+Shift+j move down
  bindsym $mod+Shift+k move up
  bindsym $mod+Shift+l move right

  bindsym $mod+Shift+Left move left
  bindsym $mod+Shift+Down move down
  bindsym $mod+Shift+Up move up
  bindsym $mod+Shift+Right move right

  # move window to another output
  bindsym $mod+Shift+comma move workspace to output left
  bindsym $mod+Shift+period move workspace to output right

  # workspace back and forth (with/without active container)
  workspace_auto_back_and_forth yes
  bindsym $mod+b workspace back_and_forth
  bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth

  # split orientation
  #bindsym $mod+h split h;exec notify-send 'tile horizontally'
  #bindsym $mod+v split v;exec notify-send 'tile vertically'
  bindsym $mod+q split toggle

  # toggle fullscreen mode for the focused container
  bindsym $mod+f fullscreen toggle

  # change container layout (stacked, tabbed, toggle split)
  bindsym $mod+s layout stacking
  bindsym $mod+w layout tabbed
  bindsym $mod+e layout toggle split

  # toggle tiling / floating
  bindsym $mod+Shift+space floating toggle

  # change focus between tiling / floating windows
  bindsym $mod+space focus mode_toggle

  # toggle sticky
  # bindsym $mod+Shift+s sticky toggle

  # focus the parent container
  # bindsym $mod+a focus parent

  # move the currently focused window to the scratchpad
  # bindsym $mod+Shift+minus move scratchpad

  # Show the next scratchpad window or hide the focused scratchpad window.
  # If there are multiple scratchpad windows, this command cycles through them.
  # bindsym $mod+minus scratchpad show

  #navigate workspaces next / previous
  bindsym $mod+Ctrl+Right workspace next
  bindsym $mod+Ctrl+Left workspace prev


  # Workspace names
  # to display names or symbols instead of plain workspace numbers you can use
  # something like: set $ws1 1:mail
  #                 set $ws2 2:
  set $ws1 1
  set $ws2 2
  set $ws3 3
  set $ws4 4
  set $ws5 5
  set $ws6 6
  set $ws7 7
  set $ws8 8

  # switch to workspace
  bindsym $mod+1 workspace $ws1
  bindsym $mod+2 workspace $ws2
  bindsym $mod+3 workspace $ws3
  bindsym $mod+4 workspace $ws4
  bindsym $mod+5 workspace $ws5
  bindsym $mod+6 workspace $ws6
  bindsym $mod+7 workspace $ws7
  bindsym $mod+8 workspace $ws8

  # Move focused container to workspace
  bindsym $mod+Ctrl+1 move container to workspace $ws1
  bindsym $mod+Ctrl+2 move container to workspace $ws2
  bindsym $mod+Ctrl+3 move container to workspace $ws3
  bindsym $mod+Ctrl+4 move container to workspace $ws4
  bindsym $mod+Ctrl+5 move container to workspace $ws5
  bindsym $mod+Ctrl+6 move container to workspace $ws6
  bindsym $mod+Ctrl+7 move container to workspace $ws7
  bindsym $mod+Ctrl+8 move container to workspace $ws8

  # Move to workspace with focused container
  bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
  bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
  bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
  bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
  bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
  bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
  bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
  bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8

  # Resize window (you can also use the mouse for that)
  bindsym $mod+r mode "resize"
  mode "resize" {
    # These bindings trigger as soon as you enter the resize mode
    bindsym h resize shrink width 5 px or 5 ppt
    bindsym j resize grow height 5 px or 5 ppt
    bindsym k resize shrink height 5 px or 5 ppt
    bindsym l resize grow width 5 px or 5 ppt

    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # exit resize mode: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
  }

#####################################

#####################################
# status bar
#####################################
  bar {
    swaybar_command waybar
  }
#####################################

#####################################
# clipboard manager
#####################################

  # exec --no-startup-id copyq
  # bindsym $mod+grave exec copyq show
  # for_window [app_id="com.github.hluk.copyq"] border pixel 1, floating enable, resize set 800 600

  exec '[ -x "$(command -v wl-paste)" ] && [ -x "$(command -v cliphist)" ] && wl-paste --watch cliphist store'
  exec '[ -x "$(command -v wl-paste)" ] && [ -x "$(command -v cliphist)" ] && wl-paste --watch pkill -RTMIN+9 waybar'
  bindsym $mod+grave exec "cliphist list | rofi -dmenu -p 'Select item to copy' -lines 10 -width 35 -theme solarized -font 'hack 10' | cliphist decode | wl-copy"
  bindsym $mod+Shift+grave exec "cliphist list | rofi -dmenu -p 'Select item to delete' -lines 10 -width 35 -theme solarized -font 'hack 10' | cliphist delete"

#####################################

#####################################
# screen capture
#####################################

  bindsym Print exec grim -g "$(slurp)" - | swappy -f -
  # bindsym Print exec flameshot gui
  # for_window [app_id="flameshot"] border pixel 0, floating enable, fullscreen disable, move absolute position 0 0

  set $mode_recording "<span foreground='white'></span>\
  <span foreground='white'><b>Record</b></span> <span foreground='green'>(<b>r</b>)</span>"

  set $recorder /usr/share/sway/scripts/recorder.sh

  mode --pango_markup $mode_recording {
    bindsym r exec $recorder, mode "default"
    bindsym Shift+r exec $recorder -a, mode "default"

    # Return to default mode.
    bindsym Escape mode "default"
  }

  ## Launch // Recording Mode ##
  bindsym $mod+Shift+r mode $mode_recording

  ## Launch // Stop Recording Mode ##
  bindsym $mod+Escape exec killall -s SIGINT wf-recorder

#####################################

#####################################
# outputs
#####################################

  # swaymsg -t get_outputs
  output eDP-1 pos 0 0 res 1920x1080
  output DP-2 pos 1920 0 res 1920x1080
  output HDMI-A-1 pos 3840 0 res 1920x1080

#####################################

#####################################
# i3-gaps
#####################################

  # Set inner/outer gaps
  gaps inner 14
  gaps outer -2

  # Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
  # gaps inner|outer current|all set|plus|minus <px>
  # gaps inner all set 10
  # gaps outer all plus 5

  # Smart gaps (gaps used if only more than one container on the workspace)
  smart_gaps on

  # Smart borders (draw borders around container only if it is not the only container on this workspace) 
  # on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
  smart_borders on

  # Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global fior all workspaces.
  set $mode_gaps Gaps: (o) outer, (i) inner
  set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
  set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
  bindsym $mod+Shift+g mode "$mode_gaps"

  mode "$mode_gaps" {
          bindsym o      mode "$mode_gaps_outer"
          bindsym i      mode "$mode_gaps_inner"
          bindsym Return mode "default"
          bindsym Escape mode "default"
  }
  mode "$mode_gaps_inner" {
          bindsym plus  gaps inner current plus 5
          bindsym minus gaps inner current minus 5
          bindsym 0     gaps inner current set 0

          bindsym Shift+plus  gaps inner all plus 5
          bindsym Shift+minus gaps inner all minus 5
          bindsym Shift+0     gaps inner all set 0

          bindsym Return mode "default"
          bindsym Escape mode "default"
  }
  mode "$mode_gaps_outer" {
          bindsym plus  gaps outer current plus 5
          bindsym minus gaps outer current minus 5
          bindsym 0     gaps outer current set 0

          bindsym Shift+plus  gaps outer all plus 5
          bindsym Shift+minus gaps outer all minus 5
          bindsym Shift+0     gaps outer all set 0

          bindsym Return mode "default"
          bindsym Escape mode "default"
  }

#####################################

#####################################
# other
#####################################

  # Autostart applications
  exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
  exec --no-startup-id nitrogen --restore; sleep 1; picom -b
  # exec --no-startup-id manjaro-hello
  # exec --no-startup-id nm-applet
  exec --no-startup-id 'nm-applet --indicator'
  # exec --no-startup-id xfce4-power-manager
  exec --no-startup-id pamac-tray
  # exec --no-startup-id blueman-applet
  # exec_always --no-startup-id sbxkb
  exec --no-startup-id start_conky_maia
  # exec --no-startup-id start_conky_green
  # exec --no-startup-id xautolock -time 10 -locker blurlock
  exec_always --no-startup-id ff-theme-util
  exec_always --no-startup-id fix_xcursor


  # Theme colors
  # class                   border  backgr. text    indic.   child_border
    client.focused          #556064 #556064 #80FFF9 #FDF6E3
    client.focused_inactive #2F3D44 #2F3D44 #1ABC9C #454948
    client.unfocused        #2F3D44 #2F3D44 #1ABC9C #454948
    client.urgent           #CB4B16 #FDF6E3 #1ABC9C #268BD2
    client.placeholder      #000000 #0c0c0c #ffffff #000000 

    client.background       #2B2C2B

  exec --no-startup-id slack
  assign [class="Slack"] $ws1

  bindsym $mod+Shift+x exec swaylock -c 000000 --fade-in 0.2 --grace 2 --ignore-empty-password --clock

#####################################


# Start Applications
# bindsym $mod+Ctrl+b exec terminal -e 'bmenu'
bindsym $mod+F1 exec pcmanfm
# bindsym $mod+F3 exec ranger
# bindsym $mod+Shift+F3 exec pcmanfm_pkexec
# bindsym $mod+F5 exec terminal -e 'mocp'
# bindsym $mod+t exec --no-startup-id pkill picom
# bindsym $mod+Ctrl+t exec --no-startup-id picom -b
# bindsym $mod+Shift+d --release exec "killall dunst; exec notify-send 'restart dunst'"
# bindsym $mod+Print --release exec --no-startup-id i3-scrot -w
# bindsym $mod+Shift+Print --release exec --no-startup-id i3-scrot -s
# bindsym $mod+Ctrl+x --release exec --no-startup-id xkill


# Open applications on specific workspaces
# assign [class="Pcmanfm"] $ws3

# switch to workspace with urgent window automatically
# for_window [urgent=latest] focus

# Set shut down, restart and locking features
# bindsym $mod+0 mode "$mode_system"
# set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
# mode "$mode_system" {
#     bindsym l exec --no-startup-id i3exit lock, mode "default"
#     bindsym s exec --no-startup-id i3exit suspend, mode "default"
#     bindsym u exec --no-startup-id i3exit switch_user, mode "default"
#     bindsym e exec --no-startup-id i3exit logout, mode "default"
#     bindsym h exec --no-startup-id i3exit hibernate, mode "default"
#     bindsym r exec --no-startup-id i3exit reboot, mode "default"
#     bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

#     # exit system mode: "Enter" or "Escape"
#     bindsym Return mode "default"
#     bindsym Escape mode "default"
# }


# sway does not set DISPLAY/WAYLAND_DISPLAY in the systemd user environment
# See FS#63021
# Adapted from xorg's 50-systemd-user.sh, which achieves a similar goal.

exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP
exec hash dbus-update-activation-environment 2>/dev/null && \
     dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP

exec_always {
  gsettings set org.gnome.desktop.interface gtk-theme "$gtk-theme"
  gsettings set org.gnome.desktop.interface icon-theme "$icon-theme"
  gsettings set org.gnome.desktop.interface cursor-theme "$cursor-theme"
  gsettings set org.gnome.desktop.interface font-name "$gui-font"
}




for_window [app_id="file-roller"] border pixel 1, floating enable, resize set 800 600
for_window [app_id="nm-connection-editor"] border pixel 1, floating enable, resize set 800 600
for_window [app_id="zoom"] border pixel 1, floating enable, resize set 1800 1000
for_window [app_id="pavucontrol"] border pixel 1, floating enable, resize set 800 800
